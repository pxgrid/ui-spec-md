const marked = require('marked')

const UIFlowsRenderer = require('../uiflows')
const renderer = new UIFlowsRenderer()
marked.setOptions({
  renderer: renderer,
  gfm: true,
  tables: true,
  breaks: true,
  pedantic: false,
  sanitize: false,
  smartLists: true,
  smartypants: false,
})

const md = `
# 見出し1

\`\`\`uiflows
[メニュー]
設定をクリック
==> 設定画面
\`\`\`

\`\`\`dot
graph graphname {
   a -- b -- c;
   b -- d;
}
\`\`\`
`

const expectedResult = `<h1 id="見出し1">見出し1</h1>
<div class="UISP-Dot">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Pages: 1 -->
<svg width="271pt" height="68pt"
 viewBox="0.00 0.00 270.50 68.20" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 64.2)">
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-64.2 266.504,-64.2 266.504,4 -4,4"/>
<!-- node0 -->
<g id="node1" class="node">
<title>node0</title>
<polygon fill="none" stroke="#000000" points="0,-5.3 0,-59.7 130.9584,-59.7 130.9584,-5.3 0,-5.3"/>
<text text-anchor="middle" x="65.4792" y="-41.3" font-family="Times,serif" font-size="16.00" fill="#000000">メニュー</text>
<polyline fill="none" stroke="#000000" points="0,-32.5 130.9584,-32.5 "/>
<text text-anchor="middle" x="65.4792" y="-14.1" font-family="Times,serif" font-size="16.00" fill="#000000">設定をクリック</text>
</g>
<!-- node1 -->
<g id="node2" class="node">
<title>node1</title>
<polygon fill="none" stroke="#000000" points="166.9584,-.5 166.9584,-36.5 262.504,-36.5 262.504,-.5 166.9584,-.5"/>
<text text-anchor="middle" x="214.7312" y="-14.1" font-family="Times,serif" font-size="16.00" fill="#000000">設定画面</text>
</g>
<!-- node0&#45;&gt;node1 -->
<g id="edge1" class="edge">
<title>node0:port1&#45;&gt;node1:port0</title>
<path fill="none" stroke="#000000" d="M130.4792,-18.5C138.8898,-18.5 147.7726,-18.5 156.4913,-18.5"/>
<polygon fill="#000000" stroke="#000000" points="156.6127,-22.0001 166.6127,-18.5 156.6126,-15.0001 156.6127,-22.0001"/>
</g>
</g>
</svg>
</div><div class="UISP-Dot">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: graphname Pages: 1 -->
<svg width="134pt" height="188pt"
 viewBox="0.00 0.00 134.00 188.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 184)">
<title>graphname</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-184 130,-184 130,4 -4,4"/>
<!-- a -->
<g id="node1" class="node">
<title>a</title>
<ellipse fill="none" stroke="#000000" cx="63" cy="-162" rx="27" ry="18"/>
<text text-anchor="middle" x="63" y="-157.8" font-family="Times,serif" font-size="14.00" fill="#000000">a</text>
</g>
<!-- b -->
<g id="node2" class="node">
<title>b</title>
<ellipse fill="none" stroke="#000000" cx="63" cy="-90" rx="27" ry="18"/>
<text text-anchor="middle" x="63" y="-85.8" font-family="Times,serif" font-size="14.00" fill="#000000">b</text>
</g>
<!-- a&#45;&#45;b -->
<g id="edge1" class="edge">
<title>a&#45;&#45;b</title>
<path fill="none" stroke="#000000" d="M63,-143.8314C63,-133 63,-119.2876 63,-108.4133"/>
</g>
<!-- c -->
<g id="node3" class="node">
<title>c</title>
<ellipse fill="none" stroke="#000000" cx="27" cy="-18" rx="27" ry="18"/>
<text text-anchor="middle" x="27" y="-13.8" font-family="Times,serif" font-size="14.00" fill="#000000">c</text>
</g>
<!-- b&#45;&#45;c -->
<g id="edge2" class="edge">
<title>b&#45;&#45;c</title>
<path fill="none" stroke="#000000" d="M54.2854,-72.5708C48.6253,-61.2506 41.2784,-46.5568 35.6343,-35.2687"/>
</g>
<!-- d -->
<g id="node4" class="node">
<title>d</title>
<ellipse fill="none" stroke="#000000" cx="99" cy="-18" rx="27" ry="18"/>
<text text-anchor="middle" x="99" y="-13.8" font-family="Times,serif" font-size="14.00" fill="#000000">d</text>
</g>
<!-- b&#45;&#45;d -->
<g id="edge3" class="edge">
<title>b&#45;&#45;d</title>
<path fill="none" stroke="#000000" d="M71.7146,-72.5708C77.3747,-61.2506 84.7216,-46.5568 90.3657,-35.2687"/>
</g>
</g>
</svg>
</div>`

it('works with promises', () => {
  const rendered = marked(md)
  expect.assertions(1)
  return UIFlowsRenderer.postRender(rendered).then(result => {
    return expect(result).toEqual(expectedResult)
  })
})
